import{j as e}from"./jsx-runtime-86dfebf6.js";import{c as _}from"./chroma-699b8ba0.js";import"./moment-a9aaa855.js";import{j as i}from"./sonar-ace0ce62.js";import{l as g}from"./largeDates-73abc105.js";import{L as o,a as s}from"./LineChart-ad7cee98.js";import{L as t,S as B,c as J,P as E}from"./AreaChart-a3475e62.js";import{S as O,a as q}from"./StackedNormalizedAreaChart-e4db09db.js";import{b as F,c as G,L as H,a as K}from"./RadialValueMarker-7b3f8322.js";import{b as Q}from"./ScatterPlot-34d242f9.js";import"./index-1b03fe98.js";import"./range-163cdb4a.js";import"./index-256d607f.js";import"./rdk-0beed5d4.js";import"./index-6fd5a17b.js";import"./frame-a8f3761f.js";import"./schemes-56affe43.js";import"./RadialAxis-6c2bc59c.js";import"./index-f6b105ee.js";import"./extends-20258d9b.js";import"./SVGVisualElement-f20753d9.js";import"./interpolation-4baac368.js";import"./functions-234b1417.js";import"./utils-83ce1bd4.js";import"./area-a8b9ef93.js";import"./helper-26bacd48.js";import"./quantile-a1f83f78.js";import"./index-9494de61.js";import"./builder-9833ba7e.js";import"./expand-7b65a05b.js";import"./time-a9784969.js";import"./DiscreteLegendEntry-49610185.js";import"./SequentialLegend-1647127f.js";import"./Count-a38a1947.js";const ve={title:"Charts/Line Chart/Multi Series",component:o,subcomponents:{LineSeries:s,Line:t,StackedAreaChart:O,StackedNormalizedAreaChart:q,StackedAreaSeries:B,StackedNormalizedAreaSeries:J}},c=()=>e(o,{width:550,height:250,series:e(s,{type:"grouped",line:e(t,{strokeWidth:4}),colorScheme:"cybertron"}),data:i}),n=()=>e(o,{width:550,height:250,series:e(s,{type:"grouped",line:e(t,{strokeWidth:4}),colorScheme:"cybertron",symbols:e(E,{point:e(Q,{visible:(r,a)=>!0,onClick:r=>{console.log("Clicked node:"+JSON.stringify(r))}})})}),data:i}),d=()=>e(o,{width:400,height:300,data:R,yAxis:e(F,{scaled:!0,type:"value",axisLine:null,tickSeries:e(G,{line:null,label:null})}),xAxis:e(H,{type:"value",scaled:!0,axisLine:null,tickSeries:e(K,{line:null,label:null})}),series:e(s,{type:"grouped",line:e(t,{strokeWidth:1}),colorScheme:"cybertron"})}),m=()=>e(o,{width:550,height:350,series:e(s,{type:"grouped",line:e(t,{strokeWidth:3,style:r=>{if(r&&r.length&&r[0]&&r[0].key==="Threat Intel")return console.log("Style callback...",r),{strokeDasharray:"5"}}}),colorScheme:_.scale(["27efb5","00bfff"]).colors(i.length)}),data:i}),h=()=>e(o,{width:550,height:350,series:e(s,{type:"grouped",colorScheme:_.scale(["ACB7C9","418AD7"]).colors(g.length)}),data:g}),p=()=>e(O,{width:550,height:250,series:e(B,{colorScheme:"cybertron",area:null,line:e(t,{strokeWidth:4})}),data:i}),u=()=>e(q,{width:550,height:250,data:i,series:e(J,{colorScheme:"cybertron",area:null,line:e(t,{strokeWidth:4})})}),R=(()=>{const r=[];for(let a=0;a<20;a++){const S=[];for(let l=0;l<100;l++)S.push({key:l,data:(a/10+1)*Math.sin(Math.PI*(a+l)/50)});r.push({key:a,data:S})}return r})();var y,k,L;c.parameters={...c.parameters,docs:{...(y=c.parameters)==null?void 0:y.docs,source:{originalSource:'() => <LineChart width={550} height={250} series={<LineSeries type="grouped" line={<Line strokeWidth={4} />} colorScheme="cybertron" />} data={multiDateData} />',...(L=(k=c.parameters)==null?void 0:k.docs)==null?void 0:L.source}}};var D,b,f;n.parameters={...n.parameters,docs:{...(D=n.parameters)==null?void 0:D.docs,source:{originalSource:`() => <LineChart width={550} height={250} series={<LineSeries type="grouped" line={<Line strokeWidth={4} />} colorScheme="cybertron" symbols={<PointSeries point={<ScatterPoint visible={(data, index) => true} onClick={data => {
  console.log('Clicked node:' + JSON.stringify(data));
}} />} />} />} data={multiDateData} />`,...(f=(b=n.parameters)==null?void 0:b.docs)==null?void 0:f.source}}};var A,C,x;d.parameters={...d.parameters,docs:{...(A=d.parameters)==null?void 0:A.docs,source:{originalSource:'() => <LineChart width={400} height={300} data={prettyData} yAxis={<LinearYAxis scaled={true} type="value" axisLine={null} tickSeries={<LinearYAxisTickSeries line={null} label={null} />} />} xAxis={<LinearXAxis type="value" scaled={true} axisLine={null} tickSeries={<LinearXAxisTickSeries line={null} label={null} />} />} series={<LineSeries type="grouped" line={<Line strokeWidth={1} />} colorScheme="cybertron" />} />',...(x=(C=d.parameters)==null?void 0:C.docs)==null?void 0:x.source}}};var w,W,M;m.parameters={...m.parameters,docs:{...(w=m.parameters)==null?void 0:w.docs,source:{originalSource:`() => <LineChart width={550} height={350} series={<LineSeries type="grouped" line={<Line strokeWidth={3} style={data => {
  if (data && data.length && data[0] && data[0].key === 'Threat Intel') {
    console.log('Style callback...', data);
    return {
      strokeDasharray: '5'
    };
  }
}} />} colorScheme={chroma.scale(['27efb5', '00bfff']).colors(multiDateData.length)} />} data={multiDateData} />`,...(M=(W=m.parameters)==null?void 0:W.docs)==null?void 0:M.source}}};var N,v,P;h.parameters={...h.parameters,docs:{...(N=h.parameters)==null?void 0:N.docs,source:{originalSource:`() => <LineChart width={550} height={350} series={<LineSeries type="grouped" colorScheme={chroma.scale(['ACB7C9', '418AD7']).colors(longMultiDateData.length)} />} data={longMultiDateData} />`,...(P=(v=h.parameters)==null?void 0:v.docs)==null?void 0:P.source}}};var T,z,j;p.parameters={...p.parameters,docs:{...(T=p.parameters)==null?void 0:T.docs,source:{originalSource:'() => <StackedAreaChart width={550} height={250} series={<StackedAreaSeries colorScheme="cybertron" area={null} line={<Line strokeWidth={4} />} />} data={multiDateData} />',...(j=(z=p.parameters)==null?void 0:z.docs)==null?void 0:j.source}}};var X,Y,I;u.parameters={...u.parameters,docs:{...(X=u.parameters)==null?void 0:X.docs,source:{originalSource:'() => <StackedNormalizedAreaChart width={550} height={250} data={multiDateData} series={<StackedNormalizedAreaSeries colorScheme="cybertron" area={null} line={<Line strokeWidth={4} />} />} />',...(I=(Y=u.parameters)==null?void 0:Y.docs)==null?void 0:I.source}}};export{n as Clicked,m as CustomLineStyles,d as LargeData,p as Stacked,u as StackedNormalized,h as _LargeDataset,c as _Simple,ve as default};
