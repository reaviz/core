import{j as e,a as g}from"./jsx-runtime-86dfebf6.js";import"./moment-a9aaa855.js";import{s as r,n as Q,a as R}from"./sonar-ace0ce62.js";import{A as a,a as t,b as J,L as S,P as U,S as Y,c as $}from"./AreaChart-a3475e62.js";import{S as ee,L as ae,a as re}from"./RadialValueMarker-7b3f8322.js";import{G as te,a as u}from"./schemes-56affe43.js";import{t as ie}from"./time-a9784969.js";import{r as se}from"./range-163cdb4a.js";import"./index-1b03fe98.js";import"./chroma-699b8ba0.js";import"./index-256d607f.js";import"./rdk-0beed5d4.js";import"./index-6fd5a17b.js";import"./frame-a8f3761f.js";import"./ScatterPlot-34d242f9.js";import"./builder-9833ba7e.js";import"./RadialAxis-6c2bc59c.js";import"./quantile-a1f83f78.js";import"./functions-234b1417.js";import"./helper-26bacd48.js";import"./index-9494de61.js";import"./utils-83ce1bd4.js";import"./DiscreteLegendEntry-49610185.js";import"./SequentialLegend-1647127f.js";import"./Count-a38a1947.js";import"./SVGVisualElement-f20753d9.js";import"./interpolation-4baac368.js";import"./area-a8b9ef93.js";import"./expand-7b65a05b.js";import"./index-f6b105ee.js";import"./extends-20258d9b.js";const Pe={title:"Charts/Area Chart/Single Series",component:a,subcomponents:{AreaSeries:t,Area:J,Line:S,PointSeries:U,StackedAreaSeries:Y,StackedNormalizedAreaSeries:$}},s=()=>e(a,{width:350,height:250,data:r,series:e(t,{interpolation:"linear",colorScheme:"cybertron",line:e(S,{strokeWidth:4})})}),o=()=>e(a,{width:350,height:250,data:r,series:e(t,{interpolation:"smooth",area:e(J,{mask:e(ee,{}),gradient:e(te,{stops:[e(u,{offset:"0%",stopOpacity:.2}),e(u,{offset:"50%",stopOpacity:1})]})}),line:e(S,{strokeWidth:3})})}),n=()=>g("div",{style:{display:"flex",gap:20},children:[g("div",{children:[e("h1",{children:"Smooth"}),e(a,{width:350,height:250,data:r,series:e(t,{interpolation:"smooth"})})]}),g("div",{children:[e("h1",{children:"Step"}),e(a,{width:350,height:250,data:r,series:e(t,{interpolation:"step"})})]})]}),d=()=>e(a,{width:350,height:250,data:r,series:e(t,{animated:!1})}),i=()=>e(a,{width:350,height:250,data:Q});i.story={name:"Non-Zero"};const p=()=>e(a,{width:350,height:250,data:r,xAxis:e(ae,{type:"time",tickSeries:e(re,{interval:ie})})}),h=()=>e("div",{style:{width:"50vw",height:"50vh",border:"solid 1px red"},children:e(a,{data:r})}),m=()=>e(a,{data:[r[0]],width:350,height:250}),c=()=>se(15).map(K=>e("div",{style:{width:"250px",height:"250px",border:"solid 1px green",margin:"25px",display:"inline-block"},children:e(a,{data:r})},K)),l=()=>e(a,{width:350,height:250,data:R});var A,D,w;s.parameters={...s.parameters,docs:{...(A=s.parameters)==null?void 0:A.docs,source:{originalSource:'() => <AreaChart width={350} height={250} data={singleDateData} series={<AreaSeries interpolation="linear" colorScheme="cybertron" line={<Line strokeWidth={4} />} />} />',...(w=(D=s.parameters)==null?void 0:D.docs)==null?void 0:w.source}}};var x,y,v;o.parameters={...o.parameters,docs:{...(x=o.parameters)==null?void 0:x.docs,source:{originalSource:'() => <AreaChart width={350} height={250} data={singleDateData} series={<AreaSeries interpolation="smooth" area={<Area mask={<Stripes />} gradient={<Gradient stops={[<GradientStop offset="0%" stopOpacity={.2} />, <GradientStop offset="50%" stopOpacity={1} />]} />} />} line={<Line strokeWidth={3} />} />} />',...(v=(y=o.parameters)==null?void 0:y.docs)==null?void 0:v.source}}};var f,k,C;n.parameters={...n.parameters,docs:{...(f=n.parameters)==null?void 0:f.docs,source:{originalSource:`() => <div style={{
  display: 'flex',
  gap: 20
}}>
    <div>
      <h1>Smooth</h1>
      <AreaChart width={350} height={250} data={singleDateData} series={<AreaSeries interpolation="smooth" />} />
    </div>
    <div>
      <h1>Step</h1>
      <AreaChart width={350} height={250} data={singleDateData} series={<AreaSeries interpolation="step" />} />
    </div>
  </div>`,...(C=(k=n.parameters)==null?void 0:k.docs)==null?void 0:C.source}}};var b,L,G;d.parameters={...d.parameters,docs:{...(b=d.parameters)==null?void 0:b.docs,source:{originalSource:"() => <AreaChart width={350} height={250} data={singleDateData} series={<AreaSeries animated={false} />} />",...(G=(L=d.parameters)==null?void 0:L.docs)==null?void 0:G.source}}};var I,N,O;i.parameters={...i.parameters,docs:{...(I=i.parameters)==null?void 0:I.docs,source:{originalSource:"() => <AreaChart width={350} height={250} data={(nonZeroDateData as ChartDataShape[])} />",...(O=(N=i.parameters)==null?void 0:N.docs)==null?void 0:O.source}}};var W,X,Z;p.parameters={...p.parameters,docs:{...(W=p.parameters)==null?void 0:W.docs,source:{originalSource:'() => <AreaChart width={350} height={250} data={singleDateData} xAxis={<LinearXAxis type="time" tickSeries={<LinearXAxisTickSeries interval={timeDay} />} />} />',...(Z=(X=p.parameters)==null?void 0:X.docs)==null?void 0:Z.source}}};var j,B,P;h.parameters={...h.parameters,docs:{...(j=h.parameters)==null?void 0:j.docs,source:{originalSource:`() => <div style={{
  width: '50vw',
  height: '50vh',
  border: 'solid 1px red'
}}>
    <AreaChart data={singleDateData} />
  </div>`,...(P=(B=h.parameters)==null?void 0:B.docs)==null?void 0:P.source}}};var z,T,M;m.parameters={...m.parameters,docs:{...(z=m.parameters)==null?void 0:z.docs,source:{originalSource:"() => <AreaChart data={[singleDateData[0]]} width={350} height={250} />",...(M=(T=m.parameters)==null?void 0:T.docs)==null?void 0:M.source}}};var V,_,q;c.parameters={...c.parameters,docs:{...(V=c.parameters)==null?void 0:V.docs,source:{originalSource:`() => range(15).map(i => <div key={i} style={{
  width: '250px',
  height: '250px',
  border: 'solid 1px green',
  margin: '25px',
  display: 'inline-block'
}}>
      <AreaChart data={singleDateData} />
    </div>)`,...(q=(_=c.parameters)==null?void 0:_.docs)==null?void 0:q.source}}};var E,F,H;l.parameters={...l.parameters,docs:{...(E=l.parameters)==null?void 0:E.docs,source:{originalSource:"() => <AreaChart width={350} height={250} data={singleDateBigIntData} />",...(H=(F=l.parameters)==null?void 0:F.docs)==null?void 0:H.source}}};export{h as Autosize,l as BigInt,n as Interpolation,p as Interval,o as Masks,d as NoAnimation,i as NonZero,c as Performance,s as Simple,m as SingleValue,Pe as default};
