import{j as t,a as _,F as I}from"./jsx-runtime-86dfebf6.js";import{r as g}from"./index-1b03fe98.js";import{C as x,u as z}from"./rdk-0beed5d4.js";import{b as M,f as j,e as N,G as H,a as G,s as U,m as $,q as X,r as Y,h as B}from"./schemes-56affe43.js";import{D as J,E as K,l as R}from"./RadialAxis-6c2bc59c.js";import{g as Q,f as Z,r as ee}from"./range-163cdb4a.js";import{i as O}from"./interpolation-4baac368.js";import"./index-256d607f.js";import{g as ae}from"./helper-26bacd48.js";import{g as te}from"./utils-83ce1bd4.js";import{a as W}from"./area-a8b9ef93.js";import"./RadialValueMarker-7b3f8322.js";import"./chroma-699b8ba0.js";import"./DiscreteLegendEntry-49610185.js";import"./SequentialLegend-1647127f.js";import"./Count-a38a1947.js";const A=({data:e,id:o,xScale:r,opacity:u,index:n,variant:l,yScale:a,interpolation:d,colorScheme:c,gradient:f,glow:F,tooltip:s})=>{const i=[...e,e[e.length-1]],m=W().curve(O(d)).x((y,V)=>r(V)).y0(a(0)).y1(({data:y})=>a(y)),S=W().curve(O(d)).x((y,V)=>r(V)).y0(a(0)).y1(({data:y})=>a(-y)),h=ae({data:e,domain:[0,1,2,3],colorScheme:c,key:n}),p=f?`url(#gradient-${o}-top)`:h,b=f?`url(#gradient-${o}-bottom)`:h,[C]=a.range(),[q,k]=r.range(),v=g.useMemo(()=>Q(e),[e]);return t(x,{element:s,xScale:r,yScale:a,data:e,height:C,width:k,tooltip:t(M,{followCursor:!0,content:(y,V)=>{const L={x:y.key,y:y.data,value:y.data};return t(j,{value:L,color:V})}}),children:_("g",{pointerEvents:s?"none":"auto",style:te({glow:F}),"aria-label":v,role:"graphics-document",children:[t(N.path,{d:m(i),fill:p,stroke:"none",initial:{opacity:0},animate:{opacity:u}}),t(N.path,{d:S(i),fill:b,stroke:"none",initial:{opacity:0},animate:{opacity:u}}),f&&_(I,{children:[t(x,{element:f,id:`gradient-${o}-top`,color:h}),t(x,{element:f,id:`gradient-${o}-bottom`,color:h})]})]})})};A.defaultProps={gradient:t(H,{direction:"horizontal",stops:[t(G,{offset:"0%",stopOpacity:1},"stop"),t(G,{offset:"80%",stopOpacity:.5},"start")]}),interpolation:"smooth",colorScheme:U.cybertron[0],animated:!0,variant:"default",opacity:1,tooltip:null};try{A.displayName="FunnelArc",A.__docgenInfo={description:"",displayName:"FunnelArc",props:{id:{defaultValue:null,description:"Unique identifier for the arc. Set internally by `FunnelChart`.",name:"id",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"Data to render the funnel. Set internally by `FunnelChart`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},opacity:{defaultValue:{value:"1"},description:"Opacity of the funnel arc.",name:"opacity",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"Index of the funnel arc. Set internally by `FunnelChart`.",name:"index",required:!1,type:{name:"number"}},variant:{defaultValue:{value:"default"},description:"The chart funnel style to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"layered"'}]}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelChart`.",name:"yScale",required:!1,type:{name:"any"}},interpolation:{defaultValue:{value:"smooth"},description:"Interpolation for the area. Set internally by `AreaSeries`.",name:"interpolation",required:!1,type:{name:"enum",value:[{value:'"linear"'},{value:'"smooth"'},{value:'"step"'}]}},colorScheme:{defaultValue:{value:"schemes.cybertron[0]"},description:"Color scheme for the chart.",name:"colorScheme",required:!1,type:{name:"ColorSchemeType"}},gradient:{defaultValue:{value:`(
    <Gradient
      direction="horizontal"
      stops={[
        <GradientStop offset="0%" stopOpacity={1} key="stop" />,
        <GradientStop offset="80%" stopOpacity={0.5} key="start" />
      ]}
    />
  )`},description:"Gradient to apply to the area.",name:"gradient",required:!1,type:{name:"ReactElement<GradientProps, FC<Partial<GradientProps>>>"}},glow:{defaultValue:null,description:"Glow styling for the arc.",name:"glow",required:!1,type:{name:"Glow"}},tooltip:{defaultValue:{value:"null"},description:"Tooltip for the chart area.",name:"tooltip",required:!1,type:{name:"ReactElement<TooltipAreaProps, ForwardRefExoticComponent<Partial<TooltipAreaProps> & RefAttributes<any>>>"}}}}}catch{}const P=({data:e,index:o,xScale:r,yScale:u,fontFamily:n,padding:l,fontSize:a,fill:d,className:c,position:f,showValue:F,labelVisibility:s})=>{const i=r(o)+l,[m]=u.range(),S=m/2+l,h=e.key,p=r(o+1),b=(p?p-r(o):0)-l,C=J(h,n,a),q=K({key:h,size:C,paddingY:l,paddingX:l,width:b,height:m,fontFamily:n,fontSize:a,visibility:s}),k=g.useCallback(()=>{let v;switch(f){case"top":v=`translate(${i}, ${a*3})`;break;case"middle":v=`translate(${i}, ${S})`;break;case"bottom":{const y=Array.isArray(q)?q.slice(1).reduce((V,L)=>V+L.props.dy,0):0;v=`translate(${i}, ${m-l-y})`}break}return v},[f,i,a,S,q,m,l]);return s!=="always"&&C.width>b?null:_(N.g,{transform:k(),initial:{opacity:0},animate:{opacity:1},children:[F&&t("text",{pointerEvents:"none",fill:d,y:-(a+l),className:c,dominantBaseline:"middle",fontFamily:n,fontSize:a*2,children:Z(e.data)}),t("text",{pointerEvents:"none",fill:d,className:c,dominantBaseline:"middle",fontFamily:n,fontSize:a,children:q})]})};P.defaultProps={fontSize:13,padding:10,fontFamily:"sans-serif",fill:"#fff",position:"middle",showValue:!0,labelVisibility:"auto"};try{P.displayName="FunnelAxisLabel",P.__docgenInfo={description:"",displayName:"FunnelAxisLabel",props:{data:{defaultValue:null,description:"Data object for the label. Set internally by `FunnelAxis`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>"}},index:{defaultValue:null,description:"Index of the label. Set internally by `FunnelAxis`.",name:"index",required:!1,type:{name:"number"}},fill:{defaultValue:{value:"#fff"},description:"Color of the text.",name:"fill",required:!1,type:{name:"string"}},fontSize:{defaultValue:{value:"13"},description:"Font size of the text.",name:"fontSize",required:!1,type:{name:"number"}},fontFamily:{defaultValue:{value:"sans-serif"},description:"Font family of the text.",name:"fontFamily",required:!1,type:{name:"string"}},padding:{defaultValue:{value:"10"},description:"Padding of the label.",name:"padding",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"Class name to apply to the text.",name:"className",required:!1,type:{name:"string"}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelAxis`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelAxis`.",name:"yScale",required:!1,type:{name:"any"}},position:{defaultValue:{value:"middle"},description:"Positioning of the label.",name:"position",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"middle"'}]}},showValue:{defaultValue:{value:"true"},description:"Whether to show the value of the data.\nDefaults to `true`.",name:"showValue",required:!1,type:{name:"boolean"}},labelVisibility:{defaultValue:{value:"auto"},description:"Visibility of the label.",name:"labelVisibility",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"always"'}]}}}}}catch{}const T=({strokeColor:e,strokeWidth:o,yScale:r,xScale:u,index:n})=>{const[l]=r.range();return t("line",{x1:u(n),y1:0,x2:u(n),y2:l,stroke:e,strokeWidth:o,pointerEvents:"none"})};T.defaultProps={strokeColor:"#333",strokeWidth:2};try{T.displayName="FunnelAxisLine",T.__docgenInfo={description:"",displayName:"FunnelAxisLine",props:{strokeColor:{defaultValue:{value:"#333"},description:"Color of the axis lines.",name:"strokeColor",required:!1,type:{name:"string"}},strokeWidth:{defaultValue:{value:"2"},description:"Width of the axis lines.",name:"strokeWidth",required:!1,type:{name:"number"}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelChart`.",name:"yScale",required:!1,type:{name:"any"}},index:{defaultValue:null,description:"Index of the line. Set internally by `FunnelAxis`.",name:"index",required:!1,type:{name:"number"}}}}}catch{}const D=({data:e,xScale:o,yScale:r,line:u,label:n})=>{const l=ee(0,e.length);return t(I,{children:l.map(a=>_(g.Fragment,{children:[u&&a!==0&&t(x,{element:u,index:a,xScale:o,yScale:r}),n&&t(x,{element:n,index:a,data:e[a],xScale:o,yScale:r})]},a))})};D.defaultProps={label:t(P,{}),line:t(T,{})};try{D.displayName="FunnelAxis",D.__docgenInfo={description:"",displayName:"FunnelAxis",props:{data:{defaultValue:null,description:"Data to render the funnel. Set internally by `FunnelChart`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelChart`.",name:"yScale",required:!1,type:{name:"any"}},line:{defaultValue:{value:"<FunnelAxisLine />"},description:"The funnel axis line.",name:"line",required:!1,type:{name:"ReactElement<FunnelAxisLineProps, FC<Partial<FunnelAxisLineProps>>>"}},label:{defaultValue:{value:"<FunnelAxisLabel />"},description:"Label component for the axis.",name:"label",required:!1,type:{name:"ReactElement<FunnelAxisLabelProps, FC<Partial<FunnelAxisLabelProps>>>"}}}}}catch{}const w=({data:e,id:o,arc:r,axis:u,height:n,width:l,onSegmentClick:a})=>{const d=g.useCallback((s,i)=>{const m=R().domain([-$(e,({data:p})=>p),$(e,({data:p})=>p)]).nice().range([s,0]),S=R().domain([0,e.length]).range([0,i]);return{data:e.map((p,b)=>({...p,key:p.key,x:S(b),i:b})),yScale:m,xScale:S}},[e]),{datas:c,halfOffset:f}=g.useMemo(()=>{if(r.props.variant==="layered"){const s=n/4;return{halfOffset:s/2,datas:[{data:e,...d(n,l)},{data:e,...d(n-s,l)},{data:e,...d(n-s*2,l)}]}}else return{halfOffset:0,datas:[{data:e,...d(n,l)}]}},[e,r,n,l,d]),F=g.useCallback(s=>{if(a){const{xScale:i,data:m}=c[0],{clientX:S,clientY:h,target:p}=s,b=X({target:p,clientX:S,clientY:h}),C=Y({pos:b.x,scale:i,data:m,attr:"i"});a({value:{key:C.key,data:C.data},nativeEvent:s})}},[c,a]);return _(I,{children:[c.map((s,i)=>t("g",{style:{transform:`translate(0, ${i*f}px)`},onClick:F,children:t(x,{element:r,...s,id:`${o}-arc-${i}`,index:i})},i)),t(x,{element:u,data:e,xScale:c[0].xScale,yScale:c[0].yScale})]})};w.defaultProps={arc:t(A,{}),axis:t(D,{})};try{w.displayName="FunnelSeries",w.__docgenInfo={description:"",displayName:"FunnelSeries",props:{data:{defaultValue:null,description:"Parsed data shape. Set internally by `FunnelChart`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},id:{defaultValue:null,description:"Id of the funnel chart. Set internally by `FunnelChart`.",name:"id",required:!1,type:{name:"string"}},arc:{defaultValue:{value:"<FunnelArc />"},description:"The arc component that renders the funnel shape.",name:"arc",required:!1,type:{name:"ReactElement<FunnelArcProps, FC<Partial<FunnelArcProps>>>"}},axis:{defaultValue:{value:"<FunnelAxis />"},description:"The axis component that renders the funnel axis.",name:"axis",required:!1,type:{name:"ReactElement<FunnelAxisProps, FC<Partial<FunnelAxisProps>>>"}},height:{defaultValue:null,description:"Height of the chart. Set internally by `FunnelChart`.",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"Width of the chart. Set internally by `FunnelChart`.",name:"width",required:!1,type:{name:"number"}},onSegmentClick:{defaultValue:null,description:"Event for when a segment is clicked.",name:"onSegmentClick",required:!1,type:{name:"(e: ClickEvent) => void"}}}}}catch{}const E=({data:e,width:o,margins:r,height:u,className:n,containerClassName:l,series:a,...d})=>{const c=z(d.id),f=g.useCallback(({id:F,chartWidth:s,chartHeight:i,chartSized:m})=>m?t(x,{element:a,id:`funnel-series-${F}`,data:e,height:i,width:s}):null,[e,a]);return t(B,{id:c,width:o,height:u,margins:r,containerClassName:l,className:n,children:f})};E.defaultProps={margins:0,series:t(w,{})};try{E.displayName="FunnelChart",E.__docgenInfo={description:"",displayName:"FunnelChart",props:{data:{defaultValue:null,description:"Chart shape used to render the funnel.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},series:{defaultValue:{value:"<FunnelSeries />"},description:"The series component that renders the funnel components.",name:"series",required:!1,type:{name:"ReactElement<FunnelSeriesProps, FC<Partial<FunnelSeriesProps>>>"}},id:{defaultValue:null,description:"Id of the chart.",name:"id",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"Width of the chart. If not provided will autosize.",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"Height of the chart. If not provided will autosize.",name:"height",required:!1,type:{name:"number"}},margins:{defaultValue:{value:"0"},description:"Margins for the chart.",name:"margins",required:!1,type:{name:"Margins"}},className:{defaultValue:null,description:"Classnames for the chart.",name:"className",required:!1,type:{name:"string"}},containerClassName:{defaultValue:null,description:"Classnames for the chart.",name:"containerClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Additional css styles.",name:"style",required:!1,type:{name:"StyleHTMLAttributes<SVGSVGElement>"}},center:{defaultValue:null,description:"Center the chart. Used mainly internally.",name:"center",required:!1,type:{name:"boolean"}},centerX:{defaultValue:null,description:"Center chart on X Axis only. Used mainly internally.",name:"centerX",required:!1,type:{name:"boolean"}},centerY:{defaultValue:null,description:"Center chart on Y Axis only. Used mainly internally.",name:"centerY",required:!1,type:{name:"boolean"}}}}}catch{}try{FunnelSeries.displayName="FunnelSeries",FunnelSeries.__docgenInfo={description:"",displayName:"FunnelSeries",props:{data:{defaultValue:null,description:"Parsed data shape. Set internally by `FunnelChart`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},id:{defaultValue:null,description:"Id of the funnel chart. Set internally by `FunnelChart`.",name:"id",required:!1,type:{name:"string"}},arc:{defaultValue:{value:"<FunnelArc />"},description:"The arc component that renders the funnel shape.",name:"arc",required:!1,type:{name:"ReactElement<FunnelArcProps, FC<Partial<FunnelArcProps>>>"}},axis:{defaultValue:{value:"<FunnelAxis />"},description:"The axis component that renders the funnel axis.",name:"axis",required:!1,type:{name:"ReactElement<FunnelAxisProps, FC<Partial<FunnelAxisProps>>>"}},height:{defaultValue:null,description:"Height of the chart. Set internally by `FunnelChart`.",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"Width of the chart. Set internally by `FunnelChart`.",name:"width",required:!1,type:{name:"number"}},onSegmentClick:{defaultValue:null,description:"Event for when a segment is clicked.",name:"onSegmentClick",required:!1,type:{name:"(e: ClickEvent) => void"}}}}}catch{}try{FunnelArc.displayName="FunnelArc",FunnelArc.__docgenInfo={description:"",displayName:"FunnelArc",props:{id:{defaultValue:null,description:"Unique identifier for the arc. Set internally by `FunnelChart`.",name:"id",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"Data to render the funnel. Set internally by `FunnelChart`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},opacity:{defaultValue:{value:"1"},description:"Opacity of the funnel arc.",name:"opacity",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"Index of the funnel arc. Set internally by `FunnelChart`.",name:"index",required:!1,type:{name:"number"}},variant:{defaultValue:{value:"default"},description:"The chart funnel style to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"layered"'}]}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelChart`.",name:"yScale",required:!1,type:{name:"any"}},interpolation:{defaultValue:{value:"smooth"},description:"Interpolation for the area. Set internally by `AreaSeries`.",name:"interpolation",required:!1,type:{name:"enum",value:[{value:'"linear"'},{value:'"smooth"'},{value:'"step"'}]}},colorScheme:{defaultValue:{value:"schemes.cybertron[0]"},description:"Color scheme for the chart.",name:"colorScheme",required:!1,type:{name:"ColorSchemeType"}},gradient:{defaultValue:{value:`(
    <Gradient
      direction="horizontal"
      stops={[
        <GradientStop offset="0%" stopOpacity={1} key="stop" />,
        <GradientStop offset="80%" stopOpacity={0.5} key="start" />
      ]}
    />
  )`},description:"Gradient to apply to the area.",name:"gradient",required:!1,type:{name:"ReactElement<GradientProps, FC<Partial<GradientProps>>>"}},glow:{defaultValue:null,description:"Glow styling for the arc.",name:"glow",required:!1,type:{name:"Glow"}},tooltip:{defaultValue:{value:"null"},description:"Tooltip for the chart area.",name:"tooltip",required:!1,type:{name:"ReactElement<TooltipAreaProps, ForwardRefExoticComponent<Partial<TooltipAreaProps> & RefAttributes<any>>>"}}}}}catch{}try{FunnelAxis.displayName="FunnelAxis",FunnelAxis.__docgenInfo={description:"",displayName:"FunnelAxis",props:{data:{defaultValue:null,description:"Data to render the funnel. Set internally by `FunnelChart`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelChart`.",name:"yScale",required:!1,type:{name:"any"}},line:{defaultValue:{value:"<FunnelAxisLine />"},description:"The funnel axis line.",name:"line",required:!1,type:{name:"ReactElement<FunnelAxisLineProps, FC<Partial<FunnelAxisLineProps>>>"}},label:{defaultValue:{value:"<FunnelAxisLabel />"},description:"Label component for the axis.",name:"label",required:!1,type:{name:"ReactElement<FunnelAxisLabelProps, FC<Partial<FunnelAxisLabelProps>>>"}}}}}catch{}try{FunnelAxisLabel.displayName="FunnelAxisLabel",FunnelAxisLabel.__docgenInfo={description:"",displayName:"FunnelAxisLabel",props:{data:{defaultValue:null,description:"Data object for the label. Set internally by `FunnelAxis`.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>"}},index:{defaultValue:null,description:"Index of the label. Set internally by `FunnelAxis`.",name:"index",required:!1,type:{name:"number"}},fill:{defaultValue:{value:"#fff"},description:"Color of the text.",name:"fill",required:!1,type:{name:"string"}},fontSize:{defaultValue:{value:"13"},description:"Font size of the text.",name:"fontSize",required:!1,type:{name:"number"}},fontFamily:{defaultValue:{value:"sans-serif"},description:"Font family of the text.",name:"fontFamily",required:!1,type:{name:"string"}},padding:{defaultValue:{value:"10"},description:"Padding of the label.",name:"padding",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"Class name to apply to the text.",name:"className",required:!1,type:{name:"string"}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelAxis`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelAxis`.",name:"yScale",required:!1,type:{name:"any"}},position:{defaultValue:{value:"middle"},description:"Positioning of the label.",name:"position",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"middle"'}]}},showValue:{defaultValue:{value:"true"},description:"Whether to show the value of the data.\nDefaults to `true`.",name:"showValue",required:!1,type:{name:"boolean"}},labelVisibility:{defaultValue:{value:"auto"},description:"Visibility of the label.",name:"labelVisibility",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"always"'}]}}}}}catch{}try{FunnelAxisLine.displayName="FunnelAxisLine",FunnelAxisLine.__docgenInfo={description:"",displayName:"FunnelAxisLine",props:{strokeColor:{defaultValue:{value:"#333"},description:"Color of the axis lines.",name:"strokeColor",required:!1,type:{name:"string"}},strokeWidth:{defaultValue:{value:"2"},description:"Width of the axis lines.",name:"strokeWidth",required:!1,type:{name:"number"}},xScale:{defaultValue:null,description:"xScale for the funnel. Set internally by `FunnelChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"yScale for the funnel. Set internally by `FunnelChart`.",name:"yScale",required:!1,type:{name:"any"}},index:{defaultValue:null,description:"Index of the line. Set internally by `FunnelAxis`.",name:"index",required:!1,type:{name:"number"}}}}}catch{}export{E as F,w as a,A as b,D as c,P as d,T as e};
