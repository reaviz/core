import{j as r}from"./jsx-runtime-86dfebf6.js";import{a as n,L as i,A as l}from"./AreaChart-a3475e62.js";import"./StackedNormalizedAreaChart-e4db09db.js";const a=e=>r(n,{...e});a.defaultProps={...n.defaultProps,area:null,line:r(i,{strokeWidth:3})};try{a.displayName="LineSeries",a.__docgenInfo={description:"",displayName:"LineSeries",props:{id:{defaultValue:null,description:"Id set internally by `AreaChart`.",name:"id",required:!1,type:{name:"string"}},xScale:{defaultValue:null,description:"D3 scale for X Axis. Set internally by `AreaChart`.",name:"xScale",required:!1,type:{name:"any"}},yScale:{defaultValue:null,description:"D3 scale for Y Axis. Set internally by `AreaChart`.",name:"yScale",required:!1,type:{name:"any"}},data:{defaultValue:null,description:"Parsed data shape. Set internally by `AreaChart`.",name:"data",required:!1,type:{name:"ChartInternalDataShape[]"}},height:{defaultValue:null,description:"Height of the chart. Set internally by `AreaChart`.",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"Width of the chart. Set internally by `AreaChart`.",name:"width",required:!1,type:{name:"number"}},animated:{defaultValue:null,description:"Whether to animate the enter/update/exit.",name:"animated",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Type of area chart to render.",name:"type",required:!1,type:{name:"enum",value:[{value:'"standard"'},{value:'"grouped"'},{value:'"stacked"'},{value:'"stackedNormalized"'}]}},interpolation:{defaultValue:null,description:"Interpolation type for the area/line.",name:"interpolation",required:!1,type:{name:"enum",value:[{value:'"linear"'},{value:'"smooth"'},{value:'"step"'}]}},tooltip:{defaultValue:null,description:"Tooltip for the chart area.",name:"tooltip",required:!1,type:{name:"ReactElement<TooltipAreaProps, ForwardRefExoticComponent<Partial<TooltipAreaProps> & RefAttributes<any>>>"}},markLine:{defaultValue:null,description:"Markline for the chart.",name:"markLine",required:!1,type:{name:"ReactElement<MarkLineProps, FC<Partial<MarkLineProps>>>"}},symbols:{defaultValue:null,description:"Symbols used to show points.",name:"symbols",required:!1,type:{name:"ReactElement<PointSeriesProps, FC<Partial<PointSeriesProps>>>"}},line:{defaultValue:{value:"<Line strokeWidth={3} />"},description:"Line that is rendered.",name:"line",required:!1,type:{name:"ReactElement<LineProps, FC<Partial<LineProps>>>"}},area:{defaultValue:{value:"null"},description:"Area that is rendered.",name:"area",required:!1,type:{name:"ReactElement<AreaProps, FC<Partial<AreaProps>>>"}},colorScheme:{defaultValue:null,description:"Color scheme for the series.",name:"colorScheme",required:!1,type:{name:"ColorSchemeType"}},isZoomed:{defaultValue:null,description:"Whether the chart has been zoomed or not. Set internally by `AreaChart`.",name:"isZoomed",required:!1,type:{name:"boolean"}},valueMarkers:{defaultValue:null,description:"Value markers line for the chart.",name:"valueMarkers",required:!1,type:{name:"ReactElement<LinearValueMarkerProps, FC<LinearValueMarkerProps>>[]"}}}}}catch{}const t=e=>r(l,{...e});t.defaultProps={...l.defaultProps,series:r(a,{})};try{t.displayName="LineChart",t.__docgenInfo={description:"",displayName:"LineChart",props:{data:{defaultValue:null,description:"Data the chart will receive to render.",name:"data",required:!1,type:{name:"ChartDataShape[]"}},series:{defaultValue:{value:"<LineSeries />"},description:"The series component that renders the area/line/circles components.",name:"series",required:!1,type:{name:"ReactElement<AreaSeriesProps, FC<Partial<AreaSeriesProps>>>"}},yAxis:{defaultValue:null,description:"The linear axis component for the Y Axis of the chart.",name:"yAxis",required:!1,type:{name:"ReactElement<LinearAxisProps, FC<Partial<LinearAxisProps>>>"}},xAxis:{defaultValue:null,description:"The linear axis component for the X Axis of the chart.",name:"xAxis",required:!1,type:{name:"ReactElement<LinearAxisProps, FC<Partial<LinearAxisProps>>>"}},gridlines:{defaultValue:null,description:"The chart's background gridlines component.",name:"gridlines",required:!1,type:{name:"ReactElement<GridlineSeriesProps, FC<Partial<GridlineSeriesProps>>>"}},brush:{defaultValue:null,description:"The chart's brush component.",name:"brush",required:!1,type:{name:"ReactElement<ChartBrushProps, FC<Partial<ChartBrushProps>>>"}},zoomPan:{defaultValue:null,description:"The chart's zoom pan component.",name:"zoomPan",required:!1,type:{name:"ReactElement<ChartZoomPanProps, FC<Partial<ChartZoomPanProps>>>"}},secondaryAxis:{defaultValue:null,description:"Any secondary axis components. Useful for multi-axis charts.",name:"secondaryAxis",required:!1,type:{name:"ReactElement<LinearAxisProps, FC<Partial<LinearAxisProps>>>[]"}},id:{defaultValue:null,description:"Id of the chart.",name:"id",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"Width of the chart. If not provided will autosize.",name:"width",required:!1,type:{name:"number"}},height:{defaultValue:null,description:"Height of the chart. If not provided will autosize.",name:"height",required:!1,type:{name:"number"}},margins:{defaultValue:null,description:"Margins for the chart.",name:"margins",required:!1,type:{name:"Margins"}},className:{defaultValue:null,description:"Classnames for the chart.",name:"className",required:!1,type:{name:"string"}},containerClassName:{defaultValue:null,description:"Classnames for the chart.",name:"containerClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Additional css styles.",name:"style",required:!1,type:{name:"StyleHTMLAttributes<SVGSVGElement>"}},center:{defaultValue:null,description:"Center the chart. Used mainly internally.",name:"center",required:!1,type:{name:"boolean"}},centerX:{defaultValue:null,description:"Center chart on X Axis only. Used mainly internally.",name:"centerX",required:!1,type:{name:"boolean"}},centerY:{defaultValue:null,description:"Center chart on Y Axis only. Used mainly internally.",name:"centerY",required:!1,type:{name:"boolean"}}}}}catch{}export{t as L,a};
