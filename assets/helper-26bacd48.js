import{o as v,s as f}from"./schemes-56affe43.js";import{o as h,q as x,r as S}from"./RadialAxis-6c2bc59c.js";import{e as p}from"./range-163cdb4a.js";import"./index-256d607f.js";import{u as A}from"./chroma-699b8ba0.js";import{a as N}from"./quantile-a1f83f78.js";function w(r,a){let e,i=-1,l=-1;if(a===void 0)for(const n of r)++l,n!=null&&(e<n||e===void 0&&n>=n)&&(e=n,i=l);else for(let n of r)(n=a(n,++l,r))!=null&&(e<n||e===void 0&&n>=n)&&(e=n,i=l);return i}function d(){var r=[],a=[],e=[],i;function l(){var t=0,o=Math.max(1,a.length);for(e=new Array(o-1);++t<o;)e[t-1]=N(r,t/o);return n}function n(t){return t==null||isNaN(t=+t)?i:a[S(e,t)]}return n.invertExtent=function(t){var o=a.indexOf(t);return o<0?[NaN,NaN]:[o>0?e[o-1]:r[0],o<e.length?e[o]:r[r.length-1]]},n.domain=function(t){if(!arguments.length)return r.slice();r=[];for(let o of t)o!=null&&!isNaN(o=+o)&&r.push(o);return r.sort(h),l()},n.range=function(t){return arguments.length?(a=Array.from(t),l()):a.slice()},n.unknown=function(t){return arguments.length?(i=t,n):i},n.quantiles=function(){return e.slice()},n.copy=function(){return d().domain(r).range(a).unknown(i)},x.apply(n,arguments)}function k(r){return Array.isArray(r)&&typeof r[0]=="object"}const q=(r,a)=>r.map((e,i)=>{if(e){if(e[a]!==void 0)return e[a];if(e.data&&e.data[a]!==void 0)return e.data[a]}return i}),M=r=>{let{point:a,colorScheme:e,attribute:i,index:l,data:n,active:t,isMultiSeries:o,domain:s,key:u,scale:m}={attribute:"key",isMultiSeries:!1,scale:v,...r};if(typeof e=="string"&&f[e]&&(e=f[e]),Array.isArray(e)){if(!s){if(o&&Array.isArray(n)){const g=w(n,y=>y.data.length);n=n[g].data}s=q(n,i)}return u=u!==void 0?u:a[i],m(e).domain(s)(u)}else return typeof e=="function"?e(a,l,t):e},c=(r,a,e,i)=>{const l=p(A(r,n=>n.data,n=>n.value));return n=>(n==null?void 0:n.value)===void 0||(n==null?void 0:n.value)===null?e:M({scale:d,domain:l,key:n.value,colorScheme:a,point:n,active:i})},D=(r,a)=>Array.from(a).reduce((e,[i,l])=>({...e,[i]:l(r)}),{}),C=(r,a)=>r.map(e=>e==null?void 0:e[a]),F=(r,a,e,i)=>{const l=new Map;return k(a)?[...new Set(a.flatMap(Object.keys))].forEach(t=>{const o=c(r,C(a,t),e,i);l.set(t,o)}):l.set("fill",c(r,a,e,i)),l};export{D as a,F as c,M as g};
