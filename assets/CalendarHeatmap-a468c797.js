import{j as r}from"./jsx-runtime-86dfebf6.js";import{r as V}from"./index-1b03fe98.js";import{H as k,a as L,b as S}from"./Heatmap-e27b243d.js";import{b,c as q,d as w,L as H,a as P,k as F}from"./RadialValueMarker-7b3f8322.js";import"./RadialAxis-6c2bc59c.js";import{d as v,b as Y}from"./schemes-56affe43.js";import{r as u,f as D}from"./range-163cdb4a.js";const _=e=>new Date(e.getFullYear(),e.getMonth(),1),A=(e,a)=>{const t=new Date(e.getTime());return t.setDate(t.getDate()+a*7),t},N=e=>{const a=new Date(e.getTime());return a.setHours(0,0,0,0),a},X=(e,a)=>{const t=new Date(e.getTime());return t.setDate(t.getDate()+a),t},E=(()=>{const e=new Date(Date.UTC(2017,0,2));return u(7).map(()=>{const a=e.toLocaleDateString("default",{weekday:"short"});return e.setDate(e.getDate()+1),a})})(),M=(e,a)=>{const t=v(e,n=>n.key)||new Date,s=_(t),i=A(s,a==="year"?53:5),l=a==="year"?53:5,f=u(7).reverse(),h=u(l),d=e.filter(n=>n.key.getTime()>s.getTime()||n.key.getTime()<i.getTime()).map(n=>({key:N(n.key),data:n.data})),C=s.getDay(),o=X(s,-C),x=[];for(let n=0;n<l;n++){const g={key:n,data:[]};for(let m=0;m<=6;m++){const c=d.find(T=>T.key.getTime()===o.getTime());g.data.push({key:m,data:(c==null?void 0:c.data)??void 0,metadata:{date:new Date(o.getTime()),start:s,end:i}}),o.setDate(o.getDate()+1)}x.push(g)}return{data:x,yDomain:f,xDomain:h,start:s}},R=e=>a=>A(e,a).toLocaleString("default",{month:"long"}),p=({view:e,data:a,...t})=>{const{data:s,yDomain:y,xDomain:i,start:l}=V.useMemo(()=>M(a,e),[a,e]);return r(k,{...t,data:s,yAxis:r(b,{type:"category",axisLine:null,domain:y,tickSeries:r(q,{tickSize:20,line:null,label:r(w,{padding:5,format:e==="year"?d=>E[d]:()=>null})})}),xAxis:r(H,{type:"category",axisLine:null,domain:i,tickSeries:r(P,{line:null,tickValues:e==="year"?void 0:[1],label:r(F,{padding:5,align:"end",format:R(l)})})})})};p.defaultProps={view:"year",series:r(L,{padding:.3,emptyColor:"transparent",cell:r(S,{tooltip:r(Y,{content:e=>`${D(e.data.metadata.date)} ∙ ${D(e.data.value)}`})})})};try{p.displayName="CalendarHeatmap",p.__docgenInfo={description:"",displayName:"CalendarHeatmap",props:{data:{defaultValue:null,description:"Chart data shape.",name:"data",required:!1,type:{name:"ChartShallowDataShape<ChartDataTypes | [ChartDataTypes, ChartDataTypes]>[]"}},height:{defaultValue:null,description:"Height of the component.",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"Width of the component.",name:"width",required:!1,type:{name:"number"}},view:{defaultValue:{value:"year"},description:"View of the calendar renderer.",name:"view",required:!1,type:{name:"enum",value:[{value:'"year"'},{value:'"month"'}]}},series:{defaultValue:{value:`(
    <HeatmapSeries
      padding={0.3}
      emptyColor="transparent"
      cell={
        <HeatmapCell
          tooltip={
            <ChartTooltip
              content={(d) =>
                \`\${formatValue(d.data.metadata.date)} ∙ \${formatValue(
                  d.data.value
                )}\`
              }
            />
          }
        />
      }
    />
  )`},description:"The series component that renders the cell components.",name:"series",required:!1,type:{name:"ReactElement<HeatmapSeriesProps, FC<Partial<HeatmapSeriesProps>>>"}},id:{defaultValue:null,description:"Id of the chart.",name:"id",required:!1,type:{name:"string"}},margins:{defaultValue:null,description:"Margins for the chart.",name:"margins",required:!1,type:{name:"Margins"}},className:{defaultValue:null,description:"Classnames for the chart.",name:"className",required:!1,type:{name:"string"}},containerClassName:{defaultValue:null,description:"Classnames for the chart.",name:"containerClassName",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Additional css styles.",name:"style",required:!1,type:{name:"StyleHTMLAttributes<SVGSVGElement>"}},center:{defaultValue:null,description:"Center the chart. Used mainly internally.",name:"center",required:!1,type:{name:"boolean"}},centerX:{defaultValue:null,description:"Center chart on X Axis only. Used mainly internally.",name:"centerX",required:!1,type:{name:"boolean"}},centerY:{defaultValue:null,description:"Center chart on Y Axis only. Used mainly internally.",name:"centerY",required:!1,type:{name:"boolean"}},yAxis:{defaultValue:null,description:"The linear axis component for the Y Axis of the chart.",name:"yAxis",required:!1,type:{name:"ReactElement<LinearAxisProps, FC<Partial<LinearAxisProps>>>"}},xAxis:{defaultValue:null,description:"The linear axis component for the X Axis of the chart.",name:"xAxis",required:!1,type:{name:"ReactElement<LinearAxisProps, FC<Partial<LinearAxisProps>>>"}},secondaryAxis:{defaultValue:null,description:"Any secondary axis components. Useful for multi-axis charts.",name:"secondaryAxis",required:!1,type:{name:"ReactElement<LinearAxisProps, FC<Partial<LinearAxisProps>>>[]"}}}}}catch{}export{p as C};
