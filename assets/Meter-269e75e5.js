import{j as r}from"./jsx-runtime-86dfebf6.js";import{c as y}from"./index-256d607f.js";import"./RadialValueMarker-7b3f8322.js";import{l as h}from"./RadialAxis-6c2bc59c.js";import{s as v,D as g,e as _}from"./schemes-56affe43.js";import"./chroma-699b8ba0.js";import"./DiscreteLegendEntry-49610185.js";import"./SequentialLegend-1647127f.js";import"./range-163cdb4a.js";import"./Count-a38a1947.js";import{C as b}from"./rdk-0beed5d4.js";const i=({index:e,scale:t,value:o,count:s,height:l,className:m,animated:u,activeFill:c,inActiveFill:a})=>{const n=t(e)<=t(o)?c:a,f=u?{...g,delay:e/s*.5}:{type:!1,delay:0};return r(_.div,{initial:{background:a,height:l},animate:{background:n,height:l},tranisition:f,className:m},e)};i.defaultProps={activeFill:v.cybertron[0],inActiveFill:"#414242",height:32,animated:!0};try{i.displayName="MeterColumn",i.__docgenInfo={description:"",displayName:"MeterColumn",props:{value:{defaultValue:null,description:"The value of the meter.",name:"value",required:!1,type:{name:"number"}},height:{defaultValue:{value:"32"},description:"The height of the column.",name:"height",required:!1,type:{name:"number"}},index:{defaultValue:null,description:"The index of the column.",name:"index",required:!1,type:{name:"number"}},scale:{defaultValue:null,description:"The scale to use.",name:"scale",required:!1,type:{name:"any"}},activeFill:{defaultValue:{value:"schemes.cybertron[0]"},description:"The active fill color.",name:"activeFill",required:!1,type:{name:"string"}},inActiveFill:{defaultValue:{value:"#414242"},description:"The inactive fill color.",name:"inActiveFill",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Additional class names to apply.",name:"className",required:!1,type:{name:"string"}},count:{defaultValue:null,description:"The total number of columns. Set internally.",name:"count",required:!1,type:{name:"number"}},animated:{defaultValue:{value:"true"},description:"Whether to animate the column.",name:"animated",required:!1,type:{name:"boolean"}}}}}catch{}const q="_container_13giw_1",V={container:q},p=({min:e,max:t,className:o,column:s,gap:l,style:m,value:u,columns:c})=>{const a=h().domain([e,t]).range([0,100]),d=a.ticks(c);return r("div",{className:y(V.container,o),style:{gap:`${l}px`,...m},children:d.map(n=>r(b,{element:s,count:d.length,index:n,scale:a,value:u},n))})};p.defaultProps={min:0,max:100,columns:10,gap:15,style:{},column:r(i,{})};try{p.displayName="Meter",p.__docgenInfo={description:"",displayName:"Meter",props:{value:{defaultValue:null,description:"The value of the meter.",name:"value",required:!1,type:{name:"number"}},min:{defaultValue:{value:"0"},description:"The minimum value of the meter.",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:{value:"100"},description:"The maximum value of the meter.",name:"max",required:!1,type:{name:"number"}},columns:{defaultValue:{value:"10"},description:"The number of columns to display.",name:"columns",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"Additional class names to apply.",name:"className",required:!1,type:{name:"string"}},gap:{defaultValue:{value:"15"},description:"The gap between columns.",name:"gap",required:!1,type:{name:"number"}},style:{defaultValue:{value:"{}"},description:"Additional styles to apply.",name:"style",required:!1,type:{name:"CSSProperties"}},column:{defaultValue:{value:"<MeterColumn />"},description:"The column to render.",name:"column",required:!1,type:{name:"ReactElement<MeterColumnProps, FC<Partial<MeterColumnProps>>>"}}}}}catch{}export{p as M,i as a};
