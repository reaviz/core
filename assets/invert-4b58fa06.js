const l=Math.sqrt(.052500000000000005)-.05,p=/^(?:[0-9a-f]{3}){1,2}$/i,g={black:"#000000",white:"#ffffff",threshold:l};function R(t,r=2){return(new Array(r).join("0")+t).slice(-r)}function e(t){if(t.slice(0,1)==="#"&&(t=t.slice(1)),!p.test(t))throw new Error(`Invalid HEX color: "${t}"`);return t.length===3&&(t=t[0]+t[0]+t[1]+t[1]+t[2]+t[2]),[parseInt(t.slice(0,2),16),parseInt(t.slice(2,4),16),parseInt(t.slice(4,6),16)]}function b(t){return{r:t[0],g:t[1],b:t[2]}}function f(t){if(!t)throw new Error("Invalid color value");return Array.isArray(t)?t:typeof t=="string"?e(t):[t.r,t.g,t.b]}function y(t){let r,i;const n=[];for(r=0;r<t.length;r++)i=t[r]/255,n[r]=i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4);return .2126*n[0]+.7152*n[1]+.0722*n[2]}function u(t,r,i){const n=r===!0?g:Object.assign({},g,r);return y(t)>n.threshold?i?e(n.black):n.black:i?e(n.white):n.white}function o(t,r=!1){return t=f(t),r?u(t,r):"#"+t.map(i=>R((255-i).toString(16))).join("")}(function(t){function r(n,a){n=f(n);const s=a?u(n,a,!0):n.map(c=>255-c);return b(s)}t.asRGB=r;function i(n,a){return n=f(n),a?u(n,a,!0):n.map(s=>255-s)}t.asRgbArray=i,t.defaultThreshold=l,t.asRgbObject=r})(o||(o={}));const A=o;export{A as i};
